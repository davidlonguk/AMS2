<?php
/**
 * @file
 * Asset Management System installation
 */

// Machine name for our custom node
// define('NODE_NAME', 'assetmanagement_show');
// Machine name for our custom taxonomy
// define('TAXONOMY_NAME', 'vocabulary_channel_brands');

/**
 * Implements hook_install().
 */
function assetmanagement_install() {
    _set_default_variables();
    _create_taxonomy();
    _create_content_type();
}

/**
 *  Set Default Variables for use in admin panel
 */
function _set_default_variables() {    
    
  // Set default variables.
  variable_set('assetmanagement_editor_import', 0);
  variable_set('assetmanagement_editor_publish', 0);
  variable_set('assetmanagement_blank_records', 0);
  
  // Get localization function for variables as t() may be unavailable.
    $t = get_t();
    
  // Give user feedback.
  drupal_set_message($t('Asset Management System variables created. Shibby!'));
}

/**
 * Programattically Creating Taxonomy for Channels/Brands
 */
   
function _create_taxonomy(){
   // Get localization function for taxonomy as t() may be unavailable.
    $t = get_t();
    
    $term = new stdClass();
    $term->name = $t('Channels/Brands');
    $term->machine_name = 'vocabulary_channel_brands';
    $term->description = $t('list of channels shows can be associated with');
    $term->heirarchy = 1;
    $term->module = 'assetmanagement';
    $term->weight = 1;
    taxonomy_vocabulary_save($term);
    
    // Create a field
 $field = array(
    'field_name' => 'field_chan_number_sky',
    'type' => 'text',
    'label' => $t('Sky Channel')
  );
  field_create_field($field);
 
  // Attach the field to our taxonomy entity
  $instance = array(
      'field_name' => 'field_chan_number_sky',
      'entity_type' => 'taxonomy_term',
      'bundle' => 'vocabulary_channel_brands',
      'label' => $t('Channels/Brands'),
      'description' => $t('list of channels shows can be associated with'),
      'required' => TRUE,
      'widget' => array(
        'type' => 'text_textfield',
        'weight' => 3
      )
  );
  field_create_instance($instance);
  
  
  // Get the vocabulary ID.
  $vid = db_query("SELECT vid FROM {taxonomy_vocabulary} WHERE machine_name = 'vocabulary_channel_brands'")->fetchField();
   
  //Create initial channel taxonomy terms
  taxonomy_term_save((object) array(
  'name' => 'History',
  'vid' => $vid,
   ));
  
  // Give user feedback.
  drupal_set_message($t('Asset Management System Channel Taxonomy created. Huzzah!'));
  }
 
/**
 * Create content types
 */
 function _create_content_type(){ 
  // Get localization function for contenty_type as t() may be unavailable.
    $t = get_t();
    
// AMS Show Content Type Definition
  $content_type = array(
  	'type' => 'assetmanagement_show',
	'name' => $t('AMS Show'),
	'description' => $t('Metadata for a Show'),
	'title_label' =>  $t('Show Title'),
	'base' => 'node_content',
	'custom' => TRUE,
  );
  
  // Set remaining definitions with defaults.
  $node_type = node_type_set_defaults($content_type);

  // Save the content type.
  node_type_save($node_type);
  
  // Add a field for the body.
  node_add_body_field($node_type, $t('Description (optional)'));
  
  // Add custom fields see field_create_field
  $fields = array();
  
  $fields['field_assetmanagement_show_guid'] = array(
  	'field_name' => 'field_assetmanagement_show_guid',
  	'type' => 'text',
  	// Optional.
  	'cardinality' => 1,
  	'settings' => array(
  		'max_length' => 6,
	),
  );
  
/**
  $fields['field_assetmanagement_show_name'] = array(
  	'field_name' => 'field_assetmanagement_show_name',
  	'type' => 'text',
  	'settings' => array(
  		'max_length' => 255,
  	),
  );
 
 */
  
  $fields['field_assetmanagement_show_url'] = array(
  	'field_name' => 'field_assetmanagement_show_url',
  	'type' => 'text',
  	'settings' => array(
  	'max_length' => 255,
  	),
  );
  
  $fields['field_assetmanagement_show_image'] = array(
  	'field_name' => 'field_assetmanagement_show_image',
  	'type' => 'image',
  );
  
  $fields['field_assetmanagement_show_chan'] = array(
  	'field_name' => 'field_assetmanagement_show_chan',
  	'type' => 'taxonomy_term_reference',
      'settings' => array(
        'allowed_values' => array(
            array(
            'vocabulary' => 'vocabulary_channel_brands',
            'parent' => 0,
           ),
          ),
        ),
  );
  
  foreach ($fields as $field){
	  field_create_field($field);
		  
	}
  // Create Field Instances.
  $instances = array();
  
  $instances['field_assetmanagement_show_guid'] = array(
  	'field_name' => 'field_assetmanagement_show_guid',
	'label' => $t('Show ID'),
	'description' => $t('Must be unique. Format first 3 letters of show then 3 numbers incrementing from 001 until unique eg ICE001.'),
	'widget' => array(
      'type' => 'text_textfield',
    ),
	'required' => TRUE,
	'settings' => array(
      'text_processing' => 0,
    ),
	
  );
  /*
  $instances['field_assetmanagement_show_name'] = array(
  	'field_name' => 'field_assetmanagement_show_name',
	'label' => $t('Show Name/Title'),
	'description' => $t('Name of show - do not include season.'),
	'widget' => array(
		'type' => 'text_textfield',
	),
	'required' => TRUE,
	'settings' => array(
      'text_processing' => 0,
    ),
	
	
  );
   
   */
  
  $instances['field_assetmanagement_show_url'] = array(
  	'field_name' => 'field_assetmanagement_show_url',
	'label' => $t('Show Page Link'),
	'description' => $t('optional link to show page on website.'),
	'widget' => array(
      'type' => 'text_textfield',
    ),
    'settings' => array(
      'text_processing' => 0,
    ),
  );
  $instances['field_assetmanagement_show_image'] = array(
  	'field_name' => 'field_assetmanagement_show_image',
	'label' => $t('Show Image'),
	'description' => $t('optional Image for show.'),
	'widget' => array(
      'type' => 'image_image',
    ),
  );
  $instances['field_assetmanagement_show_chan'] = array(
  	'field_name' => 'field_assetmanagement_show_chan',
	'label' => $t('Brand or Channel'),
	'description' => $t('Channel(s) this show is broadcast on. Also links with the approriate thePlatform account.'),
	'required' => TRUE,
      'widget' => array(
        'type' => 'options_select',
        'weight' => -10,
        ),
      /**
       'settings' => array(
        'allowed_values' => array(
            'vocabulary' => 'vocabulary_channel_brands',
            'parent' => 0
          ),
        ),
       */
  );
  
  foreach ($instances as $instance) {
    $instance['entity_type'] = 'node';
    $instance['bundle'] = 'assetmanagement_show';
    field_create_instance($instance);
  }
  // Give user feedback.
  drupal_set_message($t('Asset Management System AMS Show content type created. Yipee!'));
  
  
}

/**
 * Implements hook_uninstall().
 */
function assetmanagement_uninstall() {
  // Delete variables.
  variable_del('assetmanagement_editor_import');
  variable_del('assetmanagement_editor_publish');
  variable_del('assetmanagement_blank_records');

  // Inform the user of the removal.
  $t = get_t();
  drupal_set_message($t('Oh dude! Asset Management System variables removed.'));
  
  
  // Destroy the custom content type and any records
  
  // Get all node IDs with assetmanagement_show content type.
  $sql_query  = 'SELECT nid ';
  $sql_query .= 'FROM {node} ';
  $sql_query .= 'WHERE {node}.type = :type ';
  $result = db_query($sql_query, array(':type' => 'assetmanagement_show'));

  $nids = array();
  foreach ($result as $row) {
    $nids[] = $row->nid;
  }

  // Delete all assetmanagement_show content.
  node_delete_multiple($nids);
  drupal_set_message($t('All AMS Show content removed. Let us have a moment silence.'));

  // Remove all fields and field instances.
  foreach (field_info_instances('node', 'assetmanagement_show') as $field_name => $instance) {
    field_delete_field($field_name);
    field_delete_instance($instance);
  }
  drupal_set_message($t('AMS Show field and field instances removed. See ya.'));

  // Delete the content type.
  node_type_delete('assetmanagement_show');
  drupal_set_message($t('AMS Show Content Type removed. Game Over!'));

  // Clean up deleted fields.
  field_purge_batch(1000);
  
  // Remove custom Taxonomy vocab
// Remove 
 field_delete_field('field_chan_number_sky');
 field_purge_batch(1000);
 drupal_set_message($t('AMS Taxonomy Vocabs custom fields removed.'));
// Get the vocabulary ID.
  $vid = db_query("SELECT vid FROM {taxonomy_vocabulary} WHERE machine_name = 'vocabulary_channel_brands'")->fetchField();
  taxonomy_vocabulary_delete($vid);
  drupal_set_message($t('AMS Taxonomy Vocabs removed. Au revoir.'));
  
  
}